"""
Django settings for uppercut project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from decouple import config # สำหรับซ่อนโค้ดที่สำคัญ pip install python-decouple
import dj_database_url
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool) # True or False ไม่ใช่ string

# ALLOWED_HOSTS = ['uppercuttest.herokuapp.com']
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'category',
    'accounts',
    'store',
    'carts',
    'orders',
    'django.contrib.humanize',
    'admin_honeypot', # ใช้เก็บข้อมูลคนแอบเข้า admin
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

# จาก https://pypi.org/project/django-session-timeout/
SESSION_EXPIRE_SECONDS = 3600  # 1ชม = 3600 วินาที
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
# SESSION_TIMEOUT_REDIRECT = 'accounts/login'
SESSION_TIMEOUT_REDIRECT = 'home'

ROOT_URLCONF = 'uppercut.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'category.context_processors.menu_links',
                'carts.context_processors.counter',
            ],
        },
    },
]

WSGI_APPLICATION = 'uppercut.wsgi.application'

AUTH_USER_MODEL = 'accounts.Account'

# หาจาก https://simpleisbetterthancomplex.com/2015/11/26/package-of-the-week-python-decouple.html
# ซ่อนค่า config ที่ .env ไฟล์

# --- Database Local ----
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
    }
}

# DATABASES = {'default': dj_database_url.config(default='postgres://user:pass@localhost/dbname')}
# DATABASES = {'default': dj_database_url.config(default='postgres://postgres:123456@localhost/uppercut_db')}

# --- Database Heroku --- 
# DB_NAME = config('DB_NAME')
# DB_USER = config('DB_USER')
# DB_PASS = config('DB_PASSWORD')
# DB_HOST = config('DB_HOST')
# DATABASES = {'default': dj_database_url.config(default='postgres://DB_USER:DB_PASS@DB_HOST/DB_NAME')}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_L10N = True

# USE_TZ = True
LANGUAGE_CODE = 'th-th'

TIME_ZONE = 'Asia/Bangkok'

USE_I18N = False

USE_L10N = False

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
   os.path.join(BASE_DIR, 'uppercut/static'),
]
# รวมรวม ไฟล์ค่าคงที่ ด้วยคำสั่ง
# python manage.py collectstatic

#Media setting
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR:'danger',
}

SITE_ID = 1

# Email sending
EMAIL_HOST=config('EMAIL_HOST') # จะได้ค่าเป็น String
EMAIL_PORT=config('EMAIL_PORT', cast=int) # cast=int เพื่อเป็นตัวเลข ไม่ใช่ข้อความ
EMAIL_HOST_USER=config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD=config('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS=config('EMAIL_USE_TLS', cast=bool) #cast=bool แจ้งค่าเป็น boolean

# Whitenoise settings
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
